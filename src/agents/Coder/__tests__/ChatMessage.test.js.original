import { describe, it, expect, beforeAll } from "vitest"
import ChatMessage from "./ChatMessage.js"

describe("ChatMessage", () => {

	const chat = new ChatMessage("", { content: "# Software developer\nI am an expert of a Javascript", role: "system" })
	const next = chat.add(new ChatMessage("mac", { content: "Hello! How can I help you?", role: "assistant" }))
	const third = next.add(new ChatMessage("me", { content: "Hi. Write me a function y." }))
	third.add(new ChatMessage("mac", { content: "const y = x => x ** x", role: "assistant" }))

	describe("getFlat()", () => {
		it("should properly return flat messages", () => {
			const flat = chat.getFlat()
			expect(flat).toHaveLength(4)
		})
	})
	describe("toString()", () => {
		it("should properly format standard ", () => {
			expect(chat.toString()).toBe([
				"system:\n# Software developer\nI am an expert of a Javascript",
				"assistant @mac:\nHello! How can I help you?",
				"user @me:\nHi. Write me a function y.",
				"assistant @mac:\nconst y = x => x ** x",
			].join("\n\n"))
		})
		it("should properly format standard format", () => {
			expect(chat.toString({ format: true })).toBe([
				"system:         # Software developer\n" +
				"                I am an expert of a Javascript",
				"assistant @mac: Hello! How can I help you?",
				"user      @me:  Hi. Write me a function y.",
				"assistant @mac: const y = x => x ** x",
			].join("\n\n"))
		})
		it("should properly format short format", () => {
			expect(chat.toString({ format: "short" })).toBe([
				"sys      # Software developer\n" +
				"         I am an expert of a Javascript",
				"ass @mac Hello! How can I help you?",
				"usr @me  Hi. Write me a function y.",
				"ass @mac const y = x => x ** x",
			].join("\n\n"))
		})
		it("should properly format with column width format", () => {
			expect(chat.toString({ format: "short", columns: [6, 4, 20], padding: 2 })).toBe([
				"system        # Software developer\n" +
				"              I am an expert of a \n" +
				"              Javascript",
				"assist  @mac  Hello! How can I hel\n" +
				"              p you?",
				"user    @me   Hi. Write me a funct\n" +
				"              ion y.",
				"assist  @mac  const y = x => x ** \n" +
				"              x",
			].join("\n\n"))
		})
	})
})
